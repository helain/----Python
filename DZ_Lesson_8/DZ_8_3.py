"""
3. Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
Проверить работу исключения на реальном примере. Необходимо запрашивать у пользователя данные и заполнять список.
Класс-исключение должен контролировать типы данных элементов списка.

Примечание: длина списка не фиксирована.
Элементы запрашиваются бесконечно, пока пользователь сам не остановит работу скрипта,
введя, например, команду “stop”. При этом скрипт завершается, сформированный список выводится на экран.

Подсказка: для данного задания примем, что пользователь может вводить только числа и строки.
При вводе пользователем очередного элемента необходимо реализовать проверку типа элемента и вносить его в список,
только если введено число.
Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить соответствующее сообщение.
При этом работа скрипта не должна завершаться.
"""


class Not_int(Exception):
    def __init__(self, er_text):
        self.er_text = er_text


def num_check(i):
    if i.isdigit():
        return True
    else:
        try:
            if float(i):
                return True
        except ValueError:
            return False


result_list = []

while True:
    i = input('Введите число, для прекращения ввода введите stop: ')
    if i == 'stop':
        break
    else:
        try:
            if num_check(i) is True:
                result_list.append(float(i))
            else:
                raise Not_int('Некореектные данные. Повторите ввод')
        except Not_int as error:
            print(error)


print(result_list)
